==28838== Memcheck, a memory error detector
==28838== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==28838== Using Valgrind-3.15.0-608cb11914-20190413 and LibVEX; rerun with -h for copyright info
==28838== Command: ./fw -n 2 ReallyLongLine
==28838== Parent PID: 24276
==28838== 
--28838-- 
--28838-- Valgrind options:
--28838--    --track-origins=yes
--28838--    --leak-check=full
--28838--    --show-leak-kinds=all
--28838--    --verbose
--28838--    --log-file=output
--28838-- Contents of /proc/version:
--28838--   Linux version 3.10.0-1160.15.2.el7.x86_64 (mockbuild@kbuilder.bsys.centos.org) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-44) (GCC) ) #1 SMP Wed Feb 3 15:06:38 UTC 2021
--28838-- 
--28838-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-ssse3-avx-avx2-bmi-f16c-rdrand
--28838-- Page sizes: currently 4096, max supported 4096
--28838-- Valgrind library directory: /usr/libexec/valgrind
--28838-- Reading syms from /home/bhkaplan/coursework/csc357/asgn2/fw
--28838-- Reading syms from /usr/lib64/ld-2.17.so
--28838-- Reading syms from /usr/libexec/valgrind/memcheck-amd64-linux
--28838--    object doesn't have a symbol table
--28838--    object doesn't have a dynamic symbol table
--28838-- Scheduler: using generic scheduler lock implementation.
--28838-- Reading suppressions file: /usr/libexec/valgrind/default.supp
==28838== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-28838-by-bhkaplan-on-unix3
==28838== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-28838-by-bhkaplan-on-unix3
==28838== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-28838-by-bhkaplan-on-unix3
==28838== 
==28838== TO CONTROL THIS PROCESS USING vgdb (which you probably
==28838== don't want to do, unless you know exactly what you're doing,
==28838== or are doing some strange experiment):
==28838==   /usr/libexec/valgrind/../../bin/vgdb --pid=28838 ...command...
==28838== 
==28838== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==28838==   /path/to/gdb ./fw
==28838== and then give GDB the following command
==28838==   target remote | /usr/libexec/valgrind/../../bin/vgdb --pid=28838
==28838== --pid is optional if only one valgrind process is running
==28838== 
--28838-- REDIR: 0x4019e40 (ld-linux-x86-64.so.2:strlen) redirected to 0x580c7ed5 (???)
--28838-- REDIR: 0x4019c10 (ld-linux-x86-64.so.2:index) redirected to 0x580c7eef (???)
--28838-- Reading syms from /usr/libexec/valgrind/vgpreload_core-amd64-linux.so
--28838-- Reading syms from /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so
==28838== WARNING: new redirection conflicts with existing -- ignoring it
--28838--     old: 0x04019e40 (strlen              ) R-> (0000.0) 0x580c7ed5 ???
--28838--     new: 0x04019e40 (strlen              ) R-> (2007.0) 0x04c2d1b0 strlen
--28838-- REDIR: 0x4019dc0 (ld-linux-x86-64.so.2:strcmp) redirected to 0x4c2e300 (strcmp)
--28838-- REDIR: 0x401aa80 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4c31f90 (mempcpy)
--28838-- Reading syms from /usr/lib64/libc-2.17.so
--28838-- REDIR: 0x4ec71c0 (libc.so.6:strcasecmp) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--28838-- REDIR: 0x4ec3f40 (libc.so.6:strnlen) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--28838-- REDIR: 0x4ec9490 (libc.so.6:strncasecmp) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--28838-- REDIR: 0x4ec69a0 (libc.so.6:memset) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--28838-- REDIR: 0x4ec6950 (libc.so.6:memcpy@GLIBC_2.2.5) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--28838-- REDIR: 0x4ec5930 (libc.so.6:__GI_strrchr) redirected to 0x4c2cb70 (__GI_strrchr)
--28838-- REDIR: 0x4ec23c0 (libc.so.6:strcmp) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--28838-- REDIR: 0x4f75eb0 (libc.so.6:__strcmp_sse42) redirected to 0x4c2e2b0 (__strcmp_sse42)
--28838-- REDIR: 0x4ebc740 (libc.so.6:malloc) redirected to 0x4c29eec (malloc)
--28838-- REDIR: 0x4edc9b0 (libc.so.6:__GI_strstr) redirected to 0x4c32220 (__strstr_sse2)
--28838-- REDIR: 0x4ebcc40 (libc.so.6:realloc) redirected to 0x4c2c1c5 (realloc)
--28838-- REDIR: 0x4ebcb60 (libc.so.6:free) redirected to 0x4c2afe6 (free)
==28838== Invalid write of size 8
==28838==    at 0x400CBA: main (fw.c:87)
==28838==  Address 0x5566f48 is 0 bytes after a block of size 28,632 alloc'd
==28838==    at 0x4C29F73: malloc (vg_replace_malloc.c:309)
==28838==    by 0x400C62: main (fw.c:77)
==28838== 
==28838== Invalid read of size 8
==28838==    at 0x400CD1: main (fw.c:89)
==28838==  Address 0x5566f48 is 0 bytes after a block of size 28,632 alloc'd
==28838==    at 0x4C29F73: malloc (vg_replace_malloc.c:309)
==28838==    by 0x400C62: main (fw.c:77)
==28838== 
==28838== Conditional jump or move depends on uninitialised value(s)
==28838==    at 0x400D52: main (fw.c:100)
==28838==  Uninitialised value was created by a heap allocation
==28838==    at 0x4C29F73: malloc (vg_replace_malloc.c:309)
==28838==    by 0x400C62: main (fw.c:77)
==28838== 
==28838== Use of uninitialised value of size 8
==28838==    at 0x400D89: main (fw.c:103)
==28838==  Uninitialised value was created by a heap allocation
==28838==    at 0x4C29F73: malloc (vg_replace_malloc.c:309)
==28838==    by 0x400C62: main (fw.c:77)
==28838== 
==28838== Invalid read of size 8
==28838==    at 0x400D89: main (fw.c:103)
==28838==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==28838== 
==28838== 
==28838== Process terminating with default action of signal 11 (SIGSEGV)
==28838==  Access not within mapped region at address 0x0
==28838==    at 0x400D89: main (fw.c:103)
==28838==  If you believe this happened as a result of a stack
==28838==  overflow in your program's main thread (unlikely but
==28838==  possible), you can try to increase the size of the
==28838==  main thread stack using the --main-stacksize= flag.
==28838==  The main thread stack size used in this run was 8388608.
==28838== 
==28838== HEAP SUMMARY:
==28838==     in use at exit: 257,444 bytes in 17,905 blocks
==28838==   total heap usage: 41,323 allocs, 23,418 frees, 527,816 bytes allocated
==28838== 
==28838== Searching for pointers to 17,905 not-freed blocks
==28838== Checked 156,928 bytes
==28838== 
==28838== 8,000 bytes in 1 blocks are still reachable in loss record 1 of 5
==28838==    at 0x4C29F73: malloc (vg_replace_malloc.c:309)
==28838==    by 0x400ABE: main (fw.c:33)
==28838== 
==28838== 28,632 bytes in 1 blocks are still reachable in loss record 2 of 5
==28838==    at 0x4C29F73: malloc (vg_replace_malloc.c:309)
==28838==    by 0x400C62: main (fw.c:77)
==28838== 
==28838== 33,715 bytes in 3,579 blocks are still reachable in loss record 3 of 5
==28838==    at 0x4C2C291: realloc (vg_replace_malloc.c:836)
==28838==    by 0x40130A: readWord (fw.c:256)
==28838==    by 0x400B82: main (fw.c:49)
==28838== 
==28838== 85,896 bytes in 3,579 blocks are still reachable in loss record 4 of 5
==28838==    at 0x4C29F73: malloc (vg_replace_malloc.c:309)
==28838==    by 0x401099: hashInsert (fw.c:185)
==28838==    by 0x400B76: main (fw.c:50)
==28838== 
==28838== 101,201 bytes in 10,745 blocks are definitely lost in loss record 5 of 5
==28838==    at 0x4C2C291: realloc (vg_replace_malloc.c:836)
==28838==    by 0x40130A: readWord (fw.c:256)
==28838==    by 0x400B82: main (fw.c:49)
==28838== 
==28838== LEAK SUMMARY:
==28838==    definitely lost: 101,201 bytes in 10,745 blocks
==28838==    indirectly lost: 0 bytes in 0 blocks
==28838==      possibly lost: 0 bytes in 0 blocks
==28838==    still reachable: 156,243 bytes in 7,160 blocks
==28838==         suppressed: 0 bytes in 0 blocks
==28838== 
==28838== ERROR SUMMARY: 7162 errors from 6 contexts (suppressed: 0 from 0)
==28838== 
==28838== 1 errors in context 1 of 6:
==28838== Invalid read of size 8
==28838==    at 0x400D89: main (fw.c:103)
==28838==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==28838== 
==28838== 
==28838== 1 errors in context 2 of 6:
==28838== Use of uninitialised value of size 8
==28838==    at 0x400D89: main (fw.c:103)
==28838==  Uninitialised value was created by a heap allocation
==28838==    at 0x4C29F73: malloc (vg_replace_malloc.c:309)
==28838==    by 0x400C62: main (fw.c:77)
==28838== 
==28838== 
==28838== 1 errors in context 3 of 6:
==28838== Conditional jump or move depends on uninitialised value(s)
==28838==    at 0x400D52: main (fw.c:100)
==28838==  Uninitialised value was created by a heap allocation
==28838==    at 0x4C29F73: malloc (vg_replace_malloc.c:309)
==28838==    by 0x400C62: main (fw.c:77)
==28838== 
==28838== 
==28838== 3579 errors in context 4 of 6:
==28838== Invalid read of size 8
==28838==    at 0x400CD1: main (fw.c:89)
==28838==  Address 0x5566f48 is 0 bytes after a block of size 28,632 alloc'd
==28838==    at 0x4C29F73: malloc (vg_replace_malloc.c:309)
==28838==    by 0x400C62: main (fw.c:77)
==28838== 
==28838== 
==28838== 3579 errors in context 5 of 6:
==28838== Invalid write of size 8
==28838==    at 0x400CBA: main (fw.c:87)
==28838==  Address 0x5566f48 is 0 bytes after a block of size 28,632 alloc'd
==28838==    at 0x4C29F73: malloc (vg_replace_malloc.c:309)
==28838==    by 0x400C62: main (fw.c:77)
==28838== 
==28838== ERROR SUMMARY: 7162 errors from 6 contexts (suppressed: 0 from 0)
